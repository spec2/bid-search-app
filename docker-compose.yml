version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    volumes:
      - bid_search_app_postgres_data:/var/lib/postgresql/data
      # Scripts in this directory are executed on first run
      - ./docker/postgres/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER} -d postgres -c 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - internal

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate --url http://postgrest:3000 --overwrite-dns run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - internal
    depends_on:
      - postgrest

  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: postgrest
    restart: unless-stopped
    environment:
      PGRST_DB_URI: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgres"
      PGRST_DB_SCHEMA: "public"
      PGRST_DB_ANON_ROLE: "${POSTGRES_USER}"
      PGRST_SERVER_PORT: "3000"
    ports:
      - "3001:3000"
    networks:
      - internal
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  bid_search_app_postgres_data:

networks:
  internal:
    driver: bridge
